<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!--配置文件导入-->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:dataSource.properties</value>
		</property>
	</bean>
	<!--数据源-->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定连接数据库的JDBC驱动 -->
		<property name="driverClass">
			<value>${mysql.database.driver}</value>
		</property>
		<!-- 连接数据库所用的URL -->
		<property name="jdbcUrl">
			<value>${mysql.database.url}</value>
		</property>
		<!-- 连接数据库的用户名 -->
		<property name="user">
			<value>${mysql.database.user}</value>
		</property>
		<!-- 连接数据库的密码 -->
		<property name="password">
			<value>${mysql.database.password}</value>
		</property>
		<!-- 设置数据库连接池的最大连接数 -->
		<property name="maxPoolSize">
			<value>${mysql.database.maxPoolSize}</value>
		</property>
		<!-- 设置数据库连接池的最小连接数 -->
		<property name="minPoolSize">
			<value>${mysql.database.minPoolSize}</value>
		</property>
		<!-- 设置数据库连接池的初始化连接数 -->
		<property name="initialPoolSize">
			<value>${mysql.database.initialPoolSize}</value>
		</property>
		<!-- 设置数据库连接池的连接的最大空闲时间,单位为秒 -->
		<property name="maxIdleTime">
			<value>${mysql.database.maxIdleTime}</value>
		</property>

		<property name="idleConnectionTestPeriod">
			<value>60</value>
		</property>
		<property name="testConnectionOnCheckout">
			<value>true</value>
		</property>
	</bean>
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
	<!--session工厂，里面可以配置Hibernate的映射文件，使用annotatedClasses-->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<!-- 依赖注入上面定义的数据源dataSource -->
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<!-- 设置Hibernate的相关属性 -->
		<property name="hibernateProperties">
			<props>
				<!--hibernate的方言-->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
				</prop>
				<!--开发的时候尽量打开true-->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 设置Hibernate一个提交批次中的最大SQL语句数 -->
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!--主键Bean类		-->
		<property name="annotatedClasses">
			<list>
				<value>com.xx.abel.bean.Users</value>
				<value>com.xx.abel.bean.Rulepoints</value>
				<value>com.xx.abel.bean.Tag</value>
				<value>com.xx.abel.bean.Friends</value>
				<value>com.xx.abel.bean.Groups</value>
				<value>com.xx.abel.bean.GroupTopic</value>
				<value>com.xx.abel.bean.GroupReply</value>
				<value>com.xx.abel.bean.Reptile</value>
				<value>com.xx.abel.bean.News</value>
				<value>com.xx.abel.bean.Newstatus</value>
				<value>com.xx.abel.bean.Notepad</value>
				<value>com.xx.abel.bean.Points</value>
				<value>com.xx.abel.bean.Priority</value>
				<value>com.xx.abel.bean.Publiccomment</value>
				<value>com.xx.abel.bean.GroupUser</value>
				<value>com.xx.abel.bean.Newmessage</value>
				<value>com.xx.abel.bean.Blog</value>
				<value>com.xx.abel.bean.Category</value>
				<value>com.xx.abel.bean.Blogreprint</value>
				<value>com.xx.abel.bean.Comment</value>
				<value>com.xx.abel.bean.Bug</value>
				<value>com.xx.abel.bean.Dynamic</value>
			</list>
		</property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*save*" propagation="REQUIRED" />
			<tx:method name="*update*" propagation="REQUIRED" />
			<tx:method name="*delete*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>


	<!-- 那些类的哪些方法参与事务 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="allServiceMethod"
			expression="execution(* com.xx.abel.dao.*.*.*(..))" />
		<aop:advisor pointcut-ref="allServiceMethod"
			advice-ref="txAdvice" />
	</aop:config>

	<!-- 使Spring关注Annotation -->
	<context:annotation-config />

	<!-- 让Spring通过自动扫描来查询和管理Bean -->
	<context:component-scan base-package="com.xx" />
	<!-- 全局异常监控 -->
	<aop:config>
		<aop:advisor id="methodAroundAdviceAdvisor"
			advice-ref="methodAroundAdvice"
			pointcut="execution(* *..action.*Action.*(..))" />
	</aop:config>

	<bean id="methodAroundAdvice"
		class="com.xx.abel.exceptionAdvice.ExceptionAdvice" />
</beans>